{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/knockout/build/output/knockout-latest.debug.js","webpack:///./src/placesapi.js","webpack:///./src/index.js","webpack:///./src/style.css?8f34","webpack:///./src/style.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/process/browser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","this","eval","document","navigator","jQueryInstance","JSON","koExports","amdRequire","ko","exportSymbol","koPath","tokens","split","target","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","utils","objectForEach","obj","action","prop","extend","source","setPrototypeOf","proto","__proto__","canSetPrototype","Array","knownEvents","knownEventTypesByEventName","test","userAgent","eventType","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","cssClassNameRegex","toggleObjectClassPropertyString","classNames","shouldHaveClass","currentClassNames","match","arrayForEach","className","addOrRemoveItem","join","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","result","push","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","apply","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","appendChild","cleanNode","cloneNodes","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","setDomNodeChildren","childNodes","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","node","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagNameLower","element","tagName","toLowerCase","catchFunctionErrors","delegate","arguments","e","setTimeout","handler","timeout","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","event","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","type","inputType","isClickOnCheckableElement","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","unwrapObservable","isObservable","peek","toggleDomNodeCssClass","addOrRemoveFn","classList","setTextContent","textContent","innerTextNode","virtualElements","createTextNode","data","forceRefresh","setElementName","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","isIe6","isIe7","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","uniqueId","dataStoreKeyExpandoPropertyName","Date","getTime","dataStore","getAll","createIfNotFound","dataStoreKey","hasExistingDataStore","allDataForNode","set","clear","nextKey","domDataKey","cleanableNodeTypes","1","8","9","cleanableNodeTypesWithDescendants","getDisposeCallbacksCollection","allDisposeCallbacks","cleanSingleNode","callbacks","nodeWithChildren","child","nextChild","cleanImmediateCommentTypeChildren","callback","removeDisposeCallback","callbacksCollection","destroyCallbacksCollection","descendants","cleanExternalData","none","table","tr","select","lookup","thead","tbody","tfoot","td","th","option","optgroup","mayRequireCreateElementHack","simpleHtmlParse","html","documentContext","windowContext","tags","wrap","getWrap","depth","markup","lastChild","parseHtmlFragment","elems","jQueryHtmlParse","setHtml","parsedNodes","memoization","memos","randomMax8HexChars","Math","random","memoize","memoId","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","findMemoNodes","rootNode","appendToArray","parseMemoText","nodeValue","combinedParams","memoText","tasks","scheduler","taskQueue","taskQueueLength","nextHandle","nextIndexToProcess","processTasks","task","mark","countMarks","ex","scheduledProcess","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","extenders","throttle","writeTimeoutInstance","dependentObservable","read","write","clearTimeout","rateLimit","limitFunction","_deferUpdates","debounce","limit","deferred","ignoreUpdates","notify","notifyWhen","valuesArePrimitiveAndEqual","primitiveTypes","boolean","number","a","b","oldValueIsPrimitive","timeoutInstance","subscription","disposeCallback","_target","isDisposed","dispose","subscribable","ko_subscribable_fn","init","defaultEvent","limitNotifySubscribers","_limitBeforeChange","_origNotifySubscribers","_limitChange","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","selfIsObservable","finish","_notificationIsPending","_evalIfChanged","shouldNotify","isDifferent","_notifyNextChangeIfValueIsDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","requestedExtenders","extenderHandler","isSubscribable","computedContext","currentFrame","outerFrames","lastId","pop","registerDependency","_id","ignore","callbackArgs","getDependenciesCount","computed","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","compareArrayOptions","arrayChangeSubscription","underlyingNotifySubscribersFunction","trackingChanges","cachedDiff","pendingNotifications","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","previousContents","currentContents","changes","compareArrays","getChanges","trackChanges","rawArray","operationName","diff","arrayLength","argsLength","offset","pushDiff","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","status","computedState","computedDisposeDependencyCallback","id","entryToDispose","computedBeginDependencyDetectionCallback","computedObservable","state","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","subscribeToDependency","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","latestValue","isStale","isDirty","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhenNodeIsRemoved","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","haveDependenciesChanged","evaluateImmediate","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependeciesOrder","order","componentLoadingOperationUniqueId","protoProp","isComputed","isPureComputed","pureComputed","objectLookup","keys","values","toJS","rootObject","mapJsObjectGraph","mapInputCallback","visitedObjects","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitorCallback","propertyName","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","selectExtensions","readValue","bindingHandlers","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","size","expressionRewriting","javaScriptReservedWords","javaScriptAssignmentTarget","bindingToken","stringDouble","divisionLookBehind","keywordRegexLookBehind","in","return","typeof","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","tok","unknown","substr","twoWayBindings","bindingRewriteValidators","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","expression","getWriteableValue","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","keyValueArrayContainsKey","writeValueToProperty","allBindings","checkIfDifferent","propWriters","commentNodesHaveTextProperty","createComment","startCommentRegex","endCommentRegex","htmlTagsWithOptionallyClosingChildren","ul","ol","isStartComment","isEndComment","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","allowedBindings","emptyNode","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","bindingContext","bindingsString","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","cache","cacheKey","rewrittenBindings","createBindingsStringEvaluator","createBindingsStringEvaluatorViaCache","message","bindingDoesNotRecurseIntoElementTypes","textarea","template","makeValueAccessor","evaluateValueAccessor","valueAccessor","makeAccessorsFromFunction","getBindingsAndMakeAccessors","context","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingKey","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_subscribable","_addNode","unshift","properties","createStaticChildContext","exportDependencies","boundElementDomDataKey","sourceBindings","bindings","bindingHandlerThatControlsDescendantBindings","alreadyBound","storedBindingContextForNode","bindingsUpdater","getValueAccessor","orderedBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","topologicalSortBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","bindingName","validateThatBindingIsAllowedForVirtualElements","initResult","storedBindingContextDomDataKey","getBindingContext","viewModelOrBindingContext","applyBindingAccessorsToNode","applyBindingsToNode","makeBindingAccessors","applyBindingsToDescendants","applyBindings","contextFor","dataFor","loadingSubscribablesCache","loadedDefinitionsCache","getObjectOwnProperty","propName","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","componentName","cachedDefinition","isSynchronousComponent","definition","completedAsync","config","beginLoadingComponent","loadComponentAndNotify","clearCachedDefinition","_getFirstResultFromLoaders","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","errorCallback","makeErrorCallback","possiblyGetConfigFromAmd","loadedConfig","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveConfig","loadTemplate","isDocumentFragment","HTMLElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveTemplate","loadViewModel","resolveViewModel","fixedInstance","componentInfo","content","DocumentFragment","_allRegisteredComponents","componentBindingValue","getComponentParamsFromCustomElement","nativeBindingProviderInstance","paramsAttribute","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","createDocumentFragment","newDocFrag","allComponents","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","originalChildNodes","componentParams","loadingOperationId","componentDefinition","clonedNodesArray","cloneTemplateIntoElement","componentViewModel","componentViewModelFactory","templateNodes","createViewModel","childBindingContext","ctx","controlsDescendantBindings","attrHtmlToJavascriptMap","class","for","makeWithIfBinding","isWith","isNot","makeContextCallback","viewModel","didDisplayOnLastUpdate","savedNodes","rawValue","dataValue","shouldDisplay","isFirstRender","needsRefresh","update","attrName","attrValue","toRemove","removeAttribute","after","checkedValue","updateModel","isChecked","checked","elemValue","useCheckedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","isCheckbox","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","valueAllowUnset","arrayToDomNodeChildrenOptions","previousSelectedValues","applyToObject","defaultValue","predicateType","itemUpdate","setSelectionCallback","arrayEntry","newOptions","setDomNodeChildrenFromArrayMapping","oldOptions","optionText","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","updateView","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","allValidators","validator","possibleErrorMessage","validateDataBindValuesForRewriting","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","templateType","elemContentsProperty","dataDomDataPrefix","templatesDomDataKey","getTemplateDomData","setTemplateDomData","templateData","containerData","textData","_templateEngine","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","setTemplateEngine","renderTemplate","dataOrBindingContext","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","templateComputedDomDataKey","bindingValue","templateComputed","dataArray","innerBindingContext","newComputed","oldComputed","disposeOldComputedAndStoreNewOne","parsedBindingValue","left","right","limitFailedCompares","failedCompares","leftItem","rightItem","statusNotInOld","statusNotInNew","compareSmallArrayToBigArray","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","oldArray","newArray","dontLimitMoves","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","mapData","isFirstExecution","lastMappingResult","lastArray","x","newMappingResult","lastMappingResultIndex","newMappingResultIndex","nodesToDelete","itemsToProcess","itemsForBeforeRemoveCallbacks","itemsForMoveCallbacks","itemsForAfterAddCallbacks","itemMovedOrRetained","editScriptIndex","oldPosition","indexObservable","callCallback","items","editScriptItem","movedIndex","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","jQueryTmplVersion","ensureHasReferencedJQueryTemplates","precompiled","jQueryTemplateOptions","koBindingContext","resultNodes","compiledTemplate","templateMarkup","open","close","jqueryTmplTemplateEngineInstance","process","__webpack_exports__","searchVenues","getVenuePhotoById","api","env","FQ_API_URL","token","localStorage","CLIENT_ID","CLIENT_SECRET","location","query","fetch","lat","lng","then","res","json","catch","err","console","pyrmontLoc","map","vm","knockout__WEBPACK_IMPORTED_MODULE_1__","knockout__WEBPACK_IMPORTED_MODULE_1___default","_placesapi_js__WEBPACK_IMPORTED_MODULE_2__","shouter","markers","MaxListItems","restaurantsStore","Restaurant","renderMarkers","clearMarkers","forEach","marker","selectedRestaurants","filter","setMap","initMap","request","pyrmont","google","maps","LatLng","Map","center","results","places","PlacesServiceStatus","OK","restaurant","restaurants","createMarker","radius","PlacesService","textSearch","place","geometry","venueData","Marker","position","infowindow","InfoWindow","addListener","setContent","VenuesAPI","response","venues","log","pdata","address","photos","prefix","suffix","setAnimation","Animation","BOUNCE","doAnimation","getAnimation","loadGoogleMaps","existingScript","src","onload","_this2","filterInput","cardSelected","_this","trigger","dataAvalaible","rest","getItem","removeRestaurant","addRestaurant","add","hmr","transform","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","fn","memo","stylesInDom","isOldIE","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","el","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","on","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","dir","umask"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*!\n * Knockout JavaScript library v3.4.2\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.2\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\n\n            notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingNotifySubscribersFunction,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (underlyingNotifySubscribersFunction) {\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\n                underlyingNotifySubscribersFunction = undefined;\n            }\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n\n            changed = true;\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (this[computedState].isStale) {\n                this.evaluateImmediate();\n            } else {\n                this[computedState].isDirty = false;\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                self._subscribable = subscribable;\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable;\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                self._subscribable = subscribable;\n\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n                nodes = [];\n                subscribable._addNode = function(node) {\n                    nodes.push(node);\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                        ko.utils.arrayRemoveItem(nodes, node);\n                        if (!nodes.length) {\n                            subscribable.dispose();\n                            self._subscribable = subscribable = undefined;\n                        }\n                    });\n                };\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var rawValue = valueAccessor(),\n                    dataValue = ko.utils.unwrapObservable(rawValue),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext.createStaticChildContext(dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n","const api = process.env.FQ_API_URL || 'https://api.foursquare.com/v2'\n\nlet token = localStorage.token\n\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst CLIENT_ID = '11Z0QQEL3YIG5D2YWMU3BEUJXCZPT222HMXS2KJOCU2AJRWJ'\nconst CLIENT_SECRET = 'POMU3SMQBYU1HYR1YYX4KJWR4ZCCTE1YRLYNRHCH3PTMVSSQ'\n\n// const headers = {\n//   'Accept': 'application/json',\n//   'Authorization': token\n// }\n//\n// let url = api + 'll=' + placeLoc.lat+','+placeLoc.lng+'&query='+place.name+'&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET+'&v=20190201'\n// fetch(url).then(function(response) {\n//   debugger\n//   console.log(JSON.stringify(response))\n//   return ;\n// })\n// .then(function(myJson) {\n//   console.log(JSON.stringify(myJson));\n// });\n\nexport const searchVenues = (location,query) =>\n  fetch(`${api}/venues/search?ll=${location.lat()},${location.lng()}&query=${query}&radius=250&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20190201`)\n  .then( res => res.json() )\n  .catch( err => console.error(err) )\n\nexport const getVenuePhotoById = (id) =>\n    fetch(`${api}/venues/${id}/photos?&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20190201`)\n    .then( res => res.json() )\n    .catch( err => console.error(err) )\n","import './style.css';\nimport ko from 'knockout';\nimport * as VenuesAPI from './placesapi.js'\nconst shouter =  new ko.subscribable();\nexport default shouter;\n\nlet map;\nlet vm;\nlet infowindow;\nlet markers=[];\n\nexport const pyrmontLoc = {\n  lat: -33.8665433,\n  lng: 151.1956316\n}\n\nconst MaxListItems = 12;\n\n\nconst api_url = 'https://api.foursquare.com/v2/venues/search'\n\nconst restaurantsStore = window.localStorage;\n\nfunction Restaurant(name) {\n    var self = this;\n    self.name = name;\n}\n\nfunction RestaurantViewModel() {\n    var self = this;\n\n    self.restaurants = ko.observableArray([]);\n\n    self.filterInput = ko.observable();\n\n    self.cardSelected = function(){\n      let marker = markers.filter( m => m.id == this.id)[0];\n      google.maps.event.trigger(marker, 'click');\n    }\n\n    self.dataAvalaible = shouter.subscribe( function(newValue) {\n\n      let rest = JSON.parse(restaurantsStore.getItem('availableRestaurnts'));\n\n      if(rest.length > 0 ){\n        rest.map( r => self.restaurants.push(new Restaurant(r.name)))\n        self.restaurants.notifySubscribers();\n      }\n      return newValue;\n    },self,\"dataAvalaible\");\n\n\n\n    if(!( self.restaurants &&  self.restaurants.length > 0 )/*&& self.availableRestaurnts*/){\n\n      let restaurants = []\n      loadGoogleMaps(initMap)\n\n       /*self.availableRestaurnts.map( r => self.restaurants.push( new Restaurant(r.name)))\n       */\n    }\n\n    self.selectedRestaurants = ko.computed(() =>{\n      return self.restaurants().filter(\n          (restaurant)=>{\n            if(!self.filterInput() || restaurant.name.toLowerCase().indexOf(self.filterInput().toLowerCase()) !== -1)\n              return restaurant;\n            }\n          );\n    },self);\n\n    self.selectedRestaurants.subscribe(()=>{\n      renderMarkers()\n    })\n\n    self.removeRestaurant = () => {\n      self.restaurants.remove(this);\n    }\n    self.addRestaurant = (restaurant) => {\n      self.restaurants.add(restaurant);\n    }\n}\n\nconst renderMarkers = () =>{\n  clearMarkers();\n  markers.forEach((marker)=>{\n    let ar = vm.selectedRestaurants\n    let selected = ar._latestValue.filter( r => r.id == marker.id).length > 0\n    if(selected){\n        marker.setMap(map);\n    }\n  })\n\n}\n\nconst clearMarkers = () =>{\n  markers.map((marker)=>{\n    marker.setMap(null);\n  })\n}\n\nfunction initMap() {\n  let pyrmont = new google.maps.LatLng(pyrmontLoc.lat,pyrmontLoc.lng);\n  if(!map){\n    map = new google.maps.Map(document.getElementById('map'), {\n      center: pyrmont,\n      zoom: 15\n    });\n  }\n  search('restaurant',(results, status)=>{\n    if (status === google.maps.places.PlacesServiceStatus.OK) {\n      for (var i = 0; i < results.length && i < MaxListItems; i++) {\n         let restaurant = new Restaurant(results[i].name)\n         restaurant.id = results[i].id\n         vm.restaurants.push( restaurant)\n         createMarker(results[i]);\n      }\n    }\n  })\n  return map\n}\n\nfunction createMarker(place) {\n  var placeLoc = place.geometry.location;\n  var marker = new google.maps.Marker({\n   id: place.id,\n   position: place.geometry.location\n  });\n\n const infowindow = new google.maps.InfoWindow();\n let venueData;\n google.maps.event.addListener(marker, 'click', function(){\n\n     infowindow.setContent(place.name);\n\n      VenuesAPI.searchVenues(marker.position,place.name)\n        .then((data) => {\n          if(data.response && data.response.venues && data.response.venues.length >0){\n            venueData = data.response.venues[0]\n            return VenuesAPI.getVenuePhotoById(venueData.id)\n          }\n          console.log(\"Data: \" + JSON.stringify(data))\n        })\n        .then( (pdata)=>{\n            infowindow.setContent(`\n              <h3>${place.name}</h3>\n              <h4>${venueData.location.address}</h4>\n              <img src=\"${pdata.response.photos.items[0].prefix}200x200${pdata.response.photos.items[0].suffix}\"></img>`);\n\n          })\n        .catch((err)=>{\n          if(err){\n             infowindow.setContent(\"<p>Error loading details.</p>\")\n          }\n        })\n        infowindow.open(map, this);\n        marker.setAnimation(google.maps.Animation.BOUNCE)\n        doAnimation(marker);\n  }\n  );\n\n  const  doAnimation = (marker)=> {\n        if (marker.getAnimation() !== null) {\n          marker.setAnimation(null);\n        } else {\n          marker.setAnimation(google.maps.Animation.BOUNCE);\n        }\n }\n\n google.maps.event.addListener(map, 'click', function() {\n   infowindow.close();\n });\n\n  markers.push(marker);\n}\n\nwindow.initMap = initMap;\n\n/**\n Fetch initial places from Google Places API\n*/\nfunction search (query,callback){\n\n  let pyrmont = new google.maps.LatLng(pyrmontLoc.lat,pyrmontLoc.lng);\n    var request = {\n     location: pyrmont,\n     radius: '500',\n     query: query\n    };\n    let service = new google.maps.places.PlacesService(map);\n\n    service.textSearch(request, callback);\n }\n\n/**\n  Load google map from js\n*/\nconst loadGoogleMaps = (callback) => {\n\n  const existingScript = document.getElementById('googleMaps');\n\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyAlLeSh9FL2SzbaF7L7-9SiTgvuSYPlLIs&libraries=places&libraries=places';\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n\n    script.onload = () => {\n      if (callback) callback();\n    };\n  }\n  if (existingScript && callback) callback();\n};\n\nvm = new RestaurantViewModel()\n\nko.applyBindings(vm);\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media (min-width:480px) and (max-width:639px), (min-width: 1024px){\\n  .sidebar {\\n    display: flex;\\n  }\\n\\n  .first {\\n    margin-right: 20px;\\n\\n  }\\n}\\n\\n\\n@media (min-width: 640px){\\n  .wrapper {\\n    display: flex;\\n  }\\n  .content {\\n    flex-grow: 1;\\n    flex-shrink: 0;\\n    flex-basis: 70%;\\n  }\\n}\\n\\n@media (min-width: 1024px){\\n .content {\\n    flex-basis: 60%;\\n  }\\n\\n}\\n\\n\\n\\n/* layout */\\n\\nbody{\\n  max-width:1280px;\\n  margin:0 auto;\\n}\\n*{\\n  box-sizing:border-box;\\n}\\n\\np {\\n  line-height: 1.5;\\n}\\n\\n#map {\\n        height: 100%;\\n}\\n\\n#pac-input {\\n     background-color: #fff;\\n     font-family: Roboto;\\n     font-size: 15px;\\n     font-weight: 300;\\n     margin-left: 12px;\\n     margin-top : 12px;\\n     padding: 0 11px 0 13px;\\n     text-overflow: ellipsis;\\n     width: 400px;\\n     border-radius: 5px;\\n     border: 2px solid rgb(252, 227, 242);\\n}\\n\\n#filter-locations {\\n  background-color: rgb(240, 240, 240);\\n  font-family: Roboto;\\n  font-size: 18px;\\n  font-weight: 300;\\n  margin-left: .5em;\\n  margin-top : 12px;\\n  /* padding: 0 11px 0 13px; */\\n  text-overflow: ellipsis;\\n  /* min-width:  260px; */\\n  border-radius: 5px;\\n  border: 2px solid rgb(200, 200, 200);\\n}\\n\\n.header {\\n  background: rgb(37, 130, 189);\\n  padding: .8em 1em;\\n  text-align: left;\\n  color: #fff;\\n  font-size: 1.5em;\\n\\n}\\n\\n.html {\\n  width: 100%;\\n}\\n\\n.menu {\\n  background: rgb(94, 2, 59);\\n\\n  a {\\n    color: #fff;\\n    text-decoration: none;\\n    padding: 1em;\\n    display: block;\\n    &:hover {\\n      background: lighten(rgb(94, 2, 59), 5%);\\n    }\\n  }\\n  ul {\\n    display: flex;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  li {\\n    list-style: none;\\n\\n  }\\n}\\n\\nul {\\n   list-style-type: none;\\n   margin: 0;\\n   padding: 0;\\n}\\n.res-list-card{\\n  background-color: white;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.res-list-item {\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px solid rgb(200, 200, 200);\\n  min-height: 50px;\\n  margin: .5em;\\n  margin-left: .5em;\\n  padding: .1em;\\n}\\n\\n.menu-list {\\n  display: flex;\\n  background: rgb(94, 2, 59);\\n}\\n.menu-list li {\\n  margin: 0;\\n  padding: .1em;\\n  list-style: none;\\n}\\n\\n.menu-list a {\\n  color: #fff;\\n  text-decoration: none;\\n  padding: 1em;\\n  display: block;\\n  &:hover {\\n    background: lighten(rgb(94, 2, 59), 50%);\\n  }\\n}\\n\\n\\n.content {\\n  padding: .5em;\\n  background: rgb(218, 223, 226);\\n}\\n\\n.widget {\\n  min-width: 200px;\\n  padding: .1em;\\n  margin: .1em;\\n  height: 100%;\\n}\\n\\n.sidebar {\\n  padding: .1em;\\n  background: rgb(237, 238, 239);\\n  margin: 1px;\\n}\\n\\n.footer {\\n  color: #fff;\\n  background: rgb(37, 130, 189);\\n  text-align: center;\\n  font-style: italic;\\n  padding: .5em;\\n  width: 100%;\\n\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}